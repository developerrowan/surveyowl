generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

model Survey {
    id String @unique @db.VarChar(6)
    managerId String @map(name: "manager_id") @db.VarChar(6)
    title String
    responses Response[]
    questions Question[]
    acceptResponsesUntil DateTime @default(now()) @map(name: "accept_responses_until")
    createdAt DateTime @default(now()) @map(name: "created_at")

    @@map("surveys")
}

model Response {
    id String @unique @db.VarChar(6)
    survey Survey @relation(fields: [surveyId], references: [id], onDelete: Cascade)
    surveyId String @map(name: "survey_id")
    questionResponses QuestionResponse[]
    createdAt DateTime @default(now()) @map(name: "created_at")

    @@map("responses")
}

model Question {
    id String @unique @db.VarChar(12)
    survey Survey @relation(fields: [surveyId], references: [id], onDelete: Cascade)
    surveyId String @map(name: "survey_id")
    questionResponses QuestionResponse[]
    index Int
    title String
    required Boolean @default(false)
    type String @db.VarChar()
    values String[]
    createdAt DateTime @default(now()) @map(name: "created_at")

    @@map("questions")
}

model QuestionResponse {
    id String @unique @db.VarChar(12)
    response Response @relation(fields: [responseId], references: [id], onDelete: Cascade)
    question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
    questionId String @map(name: "question_id")
    responseId String @map(name: "response_id")
    values String[]
    createdAt DateTime @default(now()) @map(name: "created_at")

    @@map("question_responses")
}